name: .NET Core Desktop

on:
  push:
    branches: [ master ]
  pull_request:
    branches: [ master ]

jobs:

  build:

    runs-on: [ubuntu-latest]  
     
    steps:
    - name: Checkout
      uses: actions/checkout@v2

    # Install the .NET Core workload
    - name: Install .NET Core
      uses: actions/setup-dotnet@v1
      with:
        dotnet-version: 5.0.x

    # Add  MSBuild to the PATH: https://github.com/microsoft/setup-msbuild
   # - name: Setup MSBuild.exe
   #   uses: microsoft/setup-msbuild@v1
  
    - name: Setup NuGet
      uses: NuGet/setup-nuget@v1.0.5
      
    - name: Restore NuGet packages
      run: nuget restore eBanking/eBanking.sln
      
   # - name: Build the Solution
   #   run: msbuild eBanking\eBanking.sln        

    - name: Build with dotnet
      run: dotnet build --configuration Release ./eBanking    

    # Execute all unit tests in the solution
    #- name: Execute unit tests
    #  run: dotnet test eBanking/eBanking.Tests
      
    # Execute all integration tests in the solution
   # - name: Execute integration tests
   #   run: dotnet test eBanking/eBanking.IntegrationTests
  
    - name: dotnet publish 
      run: |
        cd eBanking
        ls -a
        dotnet publish -c Release -o ./eBanking/   
        mkdir downloads
        cp -R ./eBanking/* ./downloads
        cd downloads        
        rm appsettings.json
        ls -a
    
    - name: Copy folder content recursively to remote
      uses: garygrossgarten/github-action-scp@v0.7.3
      with:
          local: './eBanking/downloads'
          remote: '/home/miki/eBanking/'
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          password: ${{ secrets.SSH_PASSWORD }}
          
   # - name: Run SSH command
   #   uses: garygrossgarten/github-action-ssh@v0.6.3
   #   with:
   #     command: |
   #       cd /home/miki/eBanking/
   #       killall screen
   #       screen -d -m dotnet eBanking.dll          
   #     host: ${{ secrets.SSH_HOST }}
   #     username: ${{ secrets.SSH_USERNAME }}
   #     password: ${{ secrets.SSH_PASSWORD }}
